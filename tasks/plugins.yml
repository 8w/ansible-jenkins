---
- template: src=proxy.groovy dest={{ jenkins_dest }}/proxy.groovy
  when: proxy|bool

- name: add proxy settings configuration
  shell: cat {{ jenkins_dest }}/proxy.groovy | {{ jenkins_cli_cmd }} groovy =
  when: proxy|bool

- name: List plugins
  shell: "{{ jenkins_cli_cmd }} list-plugins | cut -f 1 -d ' '"
  when: plugins is defined
  register: plugins_installed
  changed_when: false
  until: plugins_installed.rc == 0
  retries: 5
  delay: 2
  ignore_errors: yes

- name: Ensure jenkins running before requesting safe restart
  service: name=jenkins state=started

- name: Install plugins
  shell: "{{ jenkins_cli_cmd }} install-plugin '{{ item }}'"
  when: plugins_installed.stdout.find('{{ item }}') == -1
  with_items: plugins
  ignore_errors: yes
  register: result
  until: result.rc == 0
  retries: 5
  delay: 2
  notify:
    - 'Restart Jenkins'

- name: List plugins to be updated
  shell: "{{ jenkins_cli_cmd }} -noKeyAuth list-plugins | grep ')$' | cut -f 1 -d ' ' | awk 1 ORS=' '"
  register: plugins_updates
  when: (ansible_os_family == "Debian" or ansible_os_family == "RedHat")
  changed_when: false
  until: plugins_updates.rc == 0
  retries: 5
  delay: 2
  ignore_errors: yes

- name: Update plugins
  shell: "{{ jenkins_cli_cmd }} install-plugin {{ item }}"
  with_items: plugins_updates.stdout.split()
  when: plugins_updates.stdout != ''
  ignore_errors: yes
  register: result
  until: result.rc == 0
  retries: 5
  delay: 2
  notify:
    - 'Restart Jenkins'
