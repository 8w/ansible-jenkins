---
# Set up CLI access
- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  file:
    path: "{{ jenkins_dest }}"
    state: "directory"

- name: Get Jenkins CLI
  get_url:
    url: "{{ jenkins_api_url }}jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins.cli_dest }}"
    mode: "0444"
  register: jenkins_local_cli
  until: "'OK' in jenkins_local_cli.msg or 'file already exists' in jenkins_local_cli.msg"
  retries: 5
  delay: 10

- name: "Enable the JNLP port (set to 'random')"
  xml:
    file: "{{ jenkins_lib }}/config.xml"
    xpath: "/hudson/slaveAgentPort"
    value: "0"
  register: jnlp_enabled

- name: "Hard-restart Jenkins if required (for JNLP to take effect)"
  service:
    name: "jenkins"
    state: "restarted"
  when: "{{ jnlp_enabled.changed }}"

# not required now auth happens using ssh credentials
#- name: Log in to the Jenkins CLI
#  command: >
#    {{ jenkins_cli_cmd }} login --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}
#  when: "{{ jenkins_admin_user is defined and jenkins_admin_password is defined }}"
#  no_log: true
#  register: result
#  until: result.rc == 0
#  retries: 15   # gives it 30 seconds to restart
#  delay: 2
#  changed_when: false

# Need a cookie crumb
#- name: Get Jenkins updates without proxy
#  get_url: url=https://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440 timeout=30 use_proxy={{proxy}}
#  register: jenkins_updates
#  when: not proxy

#- name: Update-center Jenkins
#  shell: "cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- {{ jenkins_api_url }}updateCenter/byId/default/postBack"
#  when: jenkins_updates.changed
#  notify:
#    - 'Restart Jenkins'
