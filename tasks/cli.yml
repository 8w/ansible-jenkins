---
# Handle plugins
- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  wait_for: host=localhost port={{ port }} delay={{ startup_delay_s | default(10) }}
  when: jenkins_install.changed or config_changed.changed

- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  file: path={{ jenkins_dest }} state=directory

- name: Get Jenkins CLI
  get_url: url="{{ jenkins_api_url }}jnlpJars/jenkins-cli.jar" dest="{{ jenkins.cli_dest }}" mode=0440
  register: jenkins_local_cli
  until: "'OK' in jenkins_local_cli.msg or 'file already exists' in jenkins_local_cli.msg"
  retries: 5
  delay: 10

- name: "Enable the JNLP port (set to 'random')"
  xml:
    file: "{{ jenkins_lib }}/config.xml"
    xpath: "/hudson/slaveAgentPort"
    value: "0"
  register: jnlp_enabled
  tags: "debug"

- name: Set the admin user password
  lineinfile:
    dest: "{{ jenkins_lib }}/users/admin/config.xml"
    regexp: "<passwordHash>"
    line: "      <passwordHash>#jbcrypt:$2a$10$9wF5tTMK0Xu66Av1uLPKKO9.5WYibEJmwuAaePtHh1Ylbed3BIU7e</passwordHash>"
    backup: false
  register: admin_pw_changed

- name: Hard-restart Jenkins if required (for changed pw & JNLP to take effect)
  service:
    name: jenkins
    state: restarted
  when: "{{ jnlp_enabled.changed or admin_pw_changed.changed }}"
  register: jenkins_hard_restarted

- name: Log in to the Jenkins CLI
  command: >
    {{ jenkins_cli_cmd }} login --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}
  when: "{{ jenkins_admin_user is defined and jenkins_admin_password is defined }}"
  no_log: true
  register: result
  until: result.rc == 0
  retries: 15   # gives it 30 seconds to restart
  delay: 2
  changed_when: false
  ignore_errors: yes

# Need a cookie crumb
#- name: Get Jenkins updates without proxy
#  get_url: url=https://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440 timeout=30 use_proxy={{proxy}}
#  register: jenkins_updates
#  when: not proxy

#- name: Update-center Jenkins
#  shell: "cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- {{ jenkins_api_url }}updateCenter/byId/default/postBack"
#  when: jenkins_updates.changed
#  notify:
#    - 'Restart Jenkins'
